types = {
	type[technology] = {
		path = "game/common/technology"

		subtype[repeatable] = {
			levels = int[-1..100]
		}
		subtype[start_tech] = {
			start_tech = yes
		}
	}
	type[technology_tier] = {
		path = "game/common/technology/tier"
	}
}



technology = {
	area = enum[research_areas]
	tier = int #should actually check <technology_tier> via @variable
	category = { <tech_categoryy> } #linked this to tech_categories, which can be customized

	## cardinality = 0..1
	icon = scalar

	subtype[start_tech] = {
		## cardinality = 0..1
		cost = 0
	}

	subtype[!start_tech] = {
		cost = int
		## cardinality = 0..1
		is_rare = bool
		## cardinality = 0..1
		is_dangerous = bool
		weight = int
		#usually in ""

		## cardinality = 0..1
		potential = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## cardinality = 0..1
		levels = int[-1..100]
	}
	## cardinality = 0..1
	prerequisites = {
		## cardinality = 0..100
		<technology>
	}


	## cardinality = 0..1
	gateway = enum[tech_gateways]


	subtype[repeatable] = {
		cost_per_level = @repeatableTechLevelCost
	}

	## cardinality = 0..1
	###someone tell Caligula and Dayshine how these work
	weight_groups = {
		## cardinality = 0..1
		repeatable
		## cardinality = 0..1
		tile_blockers
	}
	## cardinality = 0..1
	mod_weight_if_group_picked = {
		## cardinality = 0..1
		repeatable = float
		## cardinality = 0..1
		tile_blockers = float
	}


	## cardinality = 0..1
	start_tech = bool
	## cardinality = 0..1
	is_reverse_engineerable = bool

	## cardinality = 0..1
	ai_update_type = enum[tech_ai_type]



	## cardinality = 0..1
	feature_flags = {
		## cardinality = 0..100
		enum[feature_flags]
	}

	## cardinality = 0..1
	modifier = {
		## cardinality = 0..1
		description = localisation

		## cardinality = 0..1
		description_parameters = {
			POINTS = int
		}

		## cardinality = 0..1
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	prereqfor_desc = {
		## cardinality = 0..4
		hide_prereq_for_desc = enum[prereq_for_categories]
		## cardinality = 0..4
		enum[prereq_for_categories] = {
			title = localisation
			desc = localisation
		}
	}

	## cardinality = 0..1
	weight_modifier = {
		## cardinality = 0..1
		factor = float
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}


	## cardinality = 0..1
	ai_weight = {
		## cardinality = 0..1
		factor = float
		## cardinality = 0..1
		weight = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}

enums = {
	enum[prereq_for_categories] = {
		ship
		custom
		component
		diplo_action
	}
	enum[feature_flags] = {
		experimental_subspace_navigation
		robot_leaders
		megaengineering
		assist_research
		tech_automated_exploration
		wormhole_stabilization
		gateway_activation
		gateway_construction
		jump_method
		planetary_ftl_inhibitor
		build_terraform_station
		terraform_inhabited
		uplifting
		modify_traits
		pop_self_modification
		habitability_gene_modding
		bliss_standard
		campaign_edicts
		unity_ambitions
		modify_robots
	}
#	enum[research_categories] = {
#		statecraft
#		voidcraft
#		field_manipulation
#		biology
#		computing
#		particles
#		military_theory
#		psionics
#		new_worlds
#		materials
#		propulsion
#		industry
#	}
	enum[technology_areas] = {
		engineering
		society
		physics
	}
	enum[tech_ai_type] = {
		all
		military
	}
	enum[tech_gateways] = {
		ship
		robotics
		kinetic_weapons
		power_generation
		energy_weapons
		biological
		capital
		psionics
	}
}
