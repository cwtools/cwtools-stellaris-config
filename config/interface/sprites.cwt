#sprites are saved in *.gfx files (like meshes) and are by and large stored in /interface

types = {
	type[sprite] = { #these are links that start with the GFX_ prefix in vanilla
		name_field = name
		path = "game/interface"
		skip_root_key = spriteTypes
		## type_key_filter = spriteType
		subtype[normal] = {

		}
		## type_key_filter = corneredTileSpriteType
		subtype[cornered_tile] = {

		}
	}
	## type_key_filter = progressbartype
	type[progressbar] = { #these are links that start with the GFX_ prefix in vanilla
		path = "game/interface"
		skip_root_key = spriteTypes
	}
}

#TODO: Rework to use types inside the top level

#sprites do not have a key, they are packaged like this:
#spriteTypes = {
# spriteType = {
#	  	name = "GFX_dummy_3d_advisor_window" - the name is the key
#		  textureFile = "gfx/interface/transp_white.dds"
#		  effectFile = "gfx/FX/buttonstate_rendertarget.lua"
#   ....
# }
#}

sprite = {
	name = scalar
	## cardinality = 0..1
	textureFile = filepath
	## cardinality = 0..1
	masking_texture = filepath
	## cardinality = 0..1
	effectFile = filepath
	## cardinality = 0..1
	alwaysTransparent = bool
	## cardinality = 0..1
	transParencecheck = bool
	## cardinality = 0..1
	borderSize = { x = int y = int }
	## cardinality = 0..1
	hitbox_margin = { x = int y = int }
	## cardinality = 0..1
	noOfFrames = int
	## cardinality = 0..1
	type = enum[sprite_type]
	## cardinality = 0..1
	character = bool
	## cardinality = 0..1
	animation = {
		## cardinality = 0..1
		animationmaskfile = filepath
		## cardinality = 0..1
		animationtexturefile = filepath
		## cardinality = 0..1
		animationrotation = float[0..360]
		## cardinality = 0..1
		animationlooping = bool
		## cardinality = 0..1
		animationtime = float
		## cardinality = 0..1
		animationdelay = float
		## cardinality = 0..1
		animationblendmode = enum[animation_mode]
		## cardinality = 0..1
		animationtype = enum[animation_type]
		## cardinality = 0..1
		animationrotationoffset = { x = float y = float }
		## cardinality = 0..1
		animationtexturescale = { x = float y = float }
		## cardinality = 0..1
		animationframes = {
			## cardinality = 1..3
			int
		}
	}
}

progressbar = {
	name = scalar
	textureFile1 = filepath
	textureFile2 = filepath
	effectFile = filepath
	color = {
		## cardinality = 3..3
		float
	}
	colortwo = {
		## cardinality = 3..3
		float
	}
	size = { x = int y = int }
}

#example:
#spriteTypes = {
# progressbartype = {
#		name = "GFX_waroverview_war_exhaustion_stats_progressbar"
#		color = { 1.0 1.0 1.0 }
#		colortwo = { 1.0 1.0 1.0 }
#		textureFile1 = "gfx/interface/progressbars/fleet_combat_progeress_bar_red.dds"
#		textureFile2 = "gfx/interface/progressbars/fleet_combat_progeress_bar_green.dds"
#		size = { x = 143 y = 38 }
#		effectFile = "gfx/FX/progress.lua"
# }
#}



enums = {
  enum[animation_mode] = {
    overlay
    add
    multiply
  }
  enum[animation_type] = {
    scrolling
    rotating
    pulsing
  }
  enum[sprite_type] = { 
  	planet
	room
  }
}
 



