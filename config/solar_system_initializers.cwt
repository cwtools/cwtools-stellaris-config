alias[planet_initializer:planet] = {
	## cardinality = 0..1
	name = localisation_synced
	### count is optional, default to 1 if isn't specified or written at all
	## cardinality = 0..1
	count = int
	## cardinality = 0..1
	count = { min = int max = int }
	## cardinality = 0..1
	entity = scalar


	### the class in planet init represents planet_class, not star_class. class = star means the planet class of this star is star.
	## cardinality = 0..1
	class = random
	## cardinality = 0..1
	class = <planet_class>
	## cardinality = 0..1
	class = <planet_class_random_list>
	## cardinality = 0..1
	class = star
	## cardinality = 0..1
	class = enum[solar_sys_init_planet_class]

	## cardinality = 0..1
	orbit_distance = int
	## cardinality = 0..1
	orbit_distance = { min = int max = int }

	## cardinality = 0..1
	change_orbit = int
	#everything below this point is optional
	## cardinality = 0..1
	flags = { #planet flags
		## cardinality = 0..inf
		scalar
	}

	## cardinality = 0..inf
	orbit_angle = int
	## cardinality = 0..inf
	orbit_angle = { min = int max = int }

	## cardinality = 0..inf
	size = int
	## cardinality = 0..inf
	size = { min = int max = int }

	## cardinality = 0..1
	has_ring = bool
	## cardinality = 0..1
	home_planet = bool
	## cardinality = 0..1
	starting_planet = bool
	## cardinality = 0..1
	tile_blockers = none
	## cardinality = 0..inf
	tile_blocker = <tile_blocker>	
	## cardinality = 0..1
	modifiers = none
	## cardinality = 0..inf
	modifier = <planet_modifier>
	## cardinality = 0..inf
	resource = <resource>
	## cardinality = 0..1
	anomaly = <anomaly_category>
	## cardinality = 0..1
	anomaly = none

	## cardinality = 0..1
	satellite_naming_policy = enum[satellite_naming_policy]

	## cardinality = 0..1
	starting_planet = bool
	
	subtype[!fallen_empire_initializer] = {
		### The scope will be a planet scope, with prev being the system. prevprev will be the system that triggered this system's initialization ( if any ). Root will be the first system in this initializer tree
		## replace_scope = { this = planet root = any prev = galactic_object }
		## cardinality = 0..1
		init_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}	
	subtype[fallen_empire_initializer] = {
		### The scope will be a planet scope, with prev being the system. prevprev will be the system that triggered this system's initialization ( if any ). Root will be the fallen empire.
		## replace_scope = { this = planet root = country prev = galactic_object }
		## cardinality = 0..1
		init_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}		
	
	alias_name[planet_initializer] = alias_match_left[planet_initializer]
	alias_name[moon_initializer] = alias_match_left[moon_initializer]
	
}	
alias[moon_initializer:moon] = {
	## cardinality = 0..1
	name = localisation_synced
	### count is optional, default to 1 if isn't specified or written at all
	## cardinality = 0..1
	count = int
	## cardinality = 0..1
	count = { min = int max = int }
	## cardinality = 0..1
	entity = scalar


	### the class in planet init represents planet_class, not star_class. class = star means the planet class of this star is star.
	## cardinality = 0..1
	class = random
	## cardinality = 0..1
	class = <planet_class>
	## cardinality = 0..1
	class = <planet_class_random_list>
	## cardinality = 0..1
	class = star
	## cardinality = 0..1
	class = enum[solar_sys_init_planet_class]

	## cardinality = 0..1
	orbit_distance = int
	## cardinality = 0..1
	orbit_distance = { min = int max = int }

	## cardinality = 0..1
	change_orbit = int
	#everything below this point is optional
	## cardinality = 0..1
	flags = { #planet flags
		## cardinality = 0..inf
		scalar
	}

	## cardinality = 0..inf
	orbit_angle = int
	## cardinality = 0..inf
	orbit_angle = { min = int max = int }

	## cardinality = 0..inf
	size = int
	## cardinality = 0..inf
	size = { min = int max = int }

	## cardinality = 0..1
	has_ring = bool
	## cardinality = 0..1
	home_planet = bool
	## cardinality = 0..1
	starting_planet = bool
	## cardinality = 0..1
	tile_blockers = none
	## cardinality = 0..inf
	tile_blocker = <tile_blocker>
	## cardinality = 0..1
	modifiers = none
	## cardinality = 0..inf
	modifier = <planet_modifier>
	## cardinality = 0..inf
	resource = <resource>
	## cardinality = 0..1
	anomaly = <anomaly_category>
	## cardinality = 0..1
	anomaly = none

	## cardinality = 0..1
	starting_planet = bool
	
	subtype[!fallen_empire_initializer] = {
		### The scope will be a planet scope, with prev being the system. prevprev will be the system that triggered this system's initialization ( if any ). Root will be the first system in this initializer tree
		## replace_scope = { this = planet root = any prev = galactic_object }
		## cardinality = 0..1
		init_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}	
	subtype[fallen_empire_initializer] = {
		### The scope will be a planet scope, with prev being the system. prevprev will be the system that triggered this system's initialization ( if any ). Root will be the fallen empire.
		## replace_scope = { this = planet root = country prev = galactic_object }
		## cardinality = 0..1
		init_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}			
}
